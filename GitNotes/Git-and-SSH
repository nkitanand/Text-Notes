## There are various protocols that git used to communicate with remote repo.
## They can be either HTTP or SSH
## While HTTP is a read-only protocol, i.e, allowing only viewing of repo
## On the other hand SSH protocol is ideal for collaboration since it allows pull and push operation.

## Since SSH allows write operations on remote repo it is necessary for SSH connection to establish authentication before allowing write operations, else it will complain.

## You can experience this - 
1. Login to a new machine [alternative install a new OS, Ubuntu may be]
2. Now install git on this new machine or new environment
3. Try cloning your git repo on this new environment.

You will notice below error during clone operation -

Error (Permission denied) -
git@github.com: Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

## You can see SSH complains about accessing rights because we have not authenticated ssh connection to git
##
## In order to authenticate, we need to generate a ssh key first and then add this key to your github account

To create SSH key, follow - https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent 
To add key to github account - https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account 
In order to use any existing key - https://docs.github.com/en/authentication/connecting-to-github-with-ssh/checking-for-existing-ssh-keys

## STEPS -

## 1. Command to generate ssh key
$ ssh-keygen -t ed25519 -C "your_email@example.com"
> Generating public/private ed25519 key pair.
> Enter file in which to save the key (/home/ubuntu/.ssh/id_ed25519): [Press Enter]
> Enter passphrase (empty for no passphrase): 
> Enter same passphrase again: 
> Your identification has been saved in /home/ubuntu/.ssh/id_ed25519
> Your public key has been saved in /home/ubuntu/.ssh/id_ed25519.pub
## In the above command ed25519 is the algorithm name used to generate key
## Replace your_email@example.com with your email
## This will create a private and public key in default location ~/.ssh/
## Output -
## Your identification has been saved in /home/ubuntu/.ssh/id_ed25519
## Your public key has been saved in /home/ubuntu/.ssh/id_ed25519.pub 

## 2. Adding your SSH key to the ssh-agent
## 
## 2.1 - Start the ssh-agent in the background.
$ eval "$(ssh-agent -s)"
> Agent pid 59566
## 2.2 - Add your SSH private key to the ssh-agent.
$ ssh-add ~/.ssh/id_ed25519
> Identity added: /home/ubuntu/.ssh/id_ed25519 (nkitanand@gmail.com)

## 3. Add the SSH key to your account on GitHub
##
## 3.1 - Copy the SSH public key to your clipboard.
$ cat ~/.ssh/id_ed25519.pub
>  # Then select and copy the contents of the id_ed25519.pub file
>  # displayed in the terminal to your clipboard
## 3.2 - Add Key.
Account > Settings > SSH and GPG Keys > New SSH Key > Paste key > Submit


## Congratulations! Now you can successfully perform all git operations on your git repo including cloning and write operations.
